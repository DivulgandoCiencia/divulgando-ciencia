---
import { getCollection } from 'astro:content';
import { clientTranslations } from '../../i18n';
import { ScienceList } from "../../components/Science"
import { calcReadTime } from '../../components/readTime';
const lang = Astro.locals.lang;
const t = clientTranslations[lang];

const { title, description, author, authors, tags, science } = Astro.props;

const articleList = (await getCollection('articles')).filter(({slug}) => slug.split('/')[0] === lang).sort((a, b) => b.data.date.getTime() - a.data.date.getTime()).filter(article => { return article.slug.split('/')[2] !== Astro.props.slug});
const authorList = await getCollection('authors');
let articles = [];
function pushIfNotIncluded (arts: (typeof articleList[0])[]) {
    let slugs = [];
    articles.forEach(article => {
        slugs.push(article.slug);
    });
    arts.forEach(article => {
        if (!slugs.includes(article.slug)) {
            articles.push(article);
        }
    });
}

if (tags !== undefined) { pushIfNotIncluded(articleList.filter(article => { return article.data.tags !== undefined ? article.data.tags.some(tag => tags.includes(tag)) : false; })); }
if (author !== undefined) { pushIfNotIncluded(articleList.filter(article => { return article.data.author !== undefined ? article.data.author === author : article.data.authors.includes(author) })); }
if (authors !== undefined) { pushIfNotIncluded(articleList.filter(article => { return article.data.author !== undefined ? article.data.author === authors.includes(author) : article.data.authors.some(aut => author.includes(aut)) })); }
if (science !== undefined) { pushIfNotIncluded(articleList.filter(article => { return article.slug.split('/')[1] === science.id})); }

---

<div class="rounded-xl border bg-card p-6">
    <h3 class="text-lg font-semibold mb-4">{t.article.relatedArticles}</h3>
    
    <div class="space-y-4">
        {articles.slice(0,3).map(article => (
            <div class="group">
                <a href={`/article/${article.slug.split('/')[2]}`} class="flex gap-3">
                    <div class="h-16 w-16 rounded-md overflow-hidden flex-shrink-0">
                        <img 
                            src={'/images/contenido/'+article.slug.split('/')[2]+'/portada.webp' || "/placeholder.svg"} 
                            alt={article.data.title}
                            transition:name={"media-portrait-"+article.slug.split('/')[2]}
                            class="h-full w-full object-cover rounded-md transition-transform group-hover:scale-105"
                        />
                    </div>
                    <div>
                        <h4 class="text-sm font-medium line-clamp-2 group-hover:text-primary transition-colors">
                            {article.data.title}
                        </h4>
                        <p class="text-xs text-muted-foreground mt-1">
                            {article.data.author !== undefined ? authorList.filter(({id}) => article.data.author.id === id)[0].data.name : authorList.filter(({id}) => article.data.authors[0].id === id)[0].data.name + ` ${t.common.and} ${(article.data.authors.length - 1).toString()} ${t.common.more}` } â€¢ {calcReadTime(article.body) + ' ' + t.articles.readTime}
                        </p>
                    </div>
                </a>
            </div>
            
        ))}
    </div>
    
    <a href="/articles" class="block mt-4 text-sm text-primary hover:underline">
        {t.article.viewMoreArticles}
    </a>
</div>

