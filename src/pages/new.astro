---
import Header from "@/components/Header.astro"
import Menu from "@/components/Menu.astro"
import Footer from "@/components/Footer.astro"
import '../styles/global.css';

const cookieTheme = Astro.locals.theme;
---
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Divulgando Ciencia</title>
        <link rel="icon" type="image/svg+xml" href="/images/logo.webp" />
        <script>
            const loadPage = async (page) => {
                const storaged = localStorage.getItem(`page-${page}`);
                if (storaged) return storaged;
                const response = await fetch(`/page/${page}`);
                const text = await response.text();
                if (response.ok) localStorage.setItem(`page-${page}`, text);
                return text;
            }
            document.addEventListener("click", async (e) => {
                const link = e.target.closest("a");
                if (!link || link.origin !== location.origin) return;
                e.preventDefault();
                const page = link.pathname.slice(1) || "home";
                console.log(page)
                const response = await loadPage(page);
                document.querySelector("main").innerHTML = response;
                window.history.pushState({}, "", link.href);
                document.title = link.textContent + "| Divulgando Ciencia";
            });
            document.addEventListener("popstate", async (e) => {
                const page = location.pathname.slice(1) || "home";
                console.log(location.pathname)
                const response = await (await fetch(`/page/${page}`)).text();
                document.querySelector("main").innerHTML = response;
                document.title = document.querySelector("h1").textContent + "| Divulgando Ciencia";
            });
        </script>
        <script is:inline define:vars={{cookieTheme}}>
            const setTheme = () => {
                const THEME_KEY = "theme";
                const DARK_CLASS = "dark";
                const LIGHT_CLASS = "light";
                const getThemePreference = () => {
                    if (cookieTheme !== '') { return cookieTheme; }
                    if (typeof localStorage !== "undefined") { return localStorage.getItem(THEME_KEY); }
                    return window.matchMedia("(prefers-color-scheme: dark)").matches ? DARK_CLASS : LIGHT_CLASS; };
                const isDark = getThemePreference() === DARK_CLASS;
                document.documentElement.classList[isDark ? "add" : "remove"](DARK_CLASS);
                if (typeof localStorage !== "undefined") {
                    // Watch the document element and persist user preference when it changes.
                    const observer = new MutationObserver(() => {
                        const isDark = document.documentElement.classList.contains(DARK_CLASS);
                        localStorage.setItem(THEME_KEY, isDark ? DARK_CLASS : LIGHT_CLASS);
                    });
                    observer.observe(document.documentElement, {
                        attributes: true,
                        attributeFilter: ["class"],
                    });
                }
            };
            document.addEventListener("astro:after-swap", setTheme);
            setTheme();
        </script>
    </head>
    <body class="flex min-h-screen flex-col relative">
        <Menu />
        <div class={"fixed top-0 left-0 inset-0 science-pattern -z-10 "}></div>
        <Header />
        <main class="flex-1">
            
        </main>
        <Footer />
    </body>
</html>