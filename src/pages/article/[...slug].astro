---
import { getCollection, render, getEntry } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import ArticleAuthor from '../../components/articles/ArticleAuthor.astro';
import AuthorsOverlap from '../../components/articles/AuthorsOverlap.astro';
import RelatedArticles from '../../components/articles/RelatedArticles.astro';
import ImageLightbox from '../../components/articles/ImageLightbox.astro';
import Icon from '../../components/ui/Icons.astro';
import Button from '../../components/ui/Button.astro';
import { ScienceList } from "../../components/Science"
import { calcReadTime } from '../../components/readTime';
import ShareMenu from '../../components/ui/ShareMenu.astro';
import { clientTranslations } from '../../i18n';
import { supabase } from '../../lib/supabase';
import { RenderTemplateResult } from 'astro/runtime/server/render/astro/render-template.js';
import OptimizedPicture from '@/components/OptimizedPicture.astro';
const lang = Astro.locals.lang;
const t = clientTranslations[lang];

const { slug } = Astro.params;

const pages = (await getCollection('articles')).filter(({slug}) => slug.split('/')[2] == Astro.params.slug);

let page

if (pages.length == 2) {
    page = pages.filter(({slug}) => slug.split('/')[0] == lang)[0];
} else if (pages.length == 1) {
    page = pages[0]
} else {
    return Astro.redirect('/404');
}

if (!page) {
    return Astro.redirect('/404');
}

// Get the article data from the collection
const { Content } = await render(page);
const article = page.data;

// Get authors data - handle both single author and multiple authors
const author = article.author ? (await getEntry('authors', article.author.id)).data : undefined;
const hasMultipleAuthors = article.authors?.length > 1;
let authors = [];
if (hasMultipleAuthors) {article.authors?.map(async(a) => {authors.push([(await getEntry('authors', a.id)).data, a.id])})}
const scienceData = ScienceList.filter(({id}) => page.slug.split('/')[1] == id)[0]
if (!supabase === null) supabase.rpc('register_view', { page_slug: page.slug.split('/')[2] }).then((response)=>{});

let coverImage;
let coverImageURL;

try {
  const slug = page.slug.split('/')[2];
    try {
        coverImage = await import(`../../assets/contenido/${slug}/portada.webp`);
    } catch {
        coverImage = await import(`../../assets/contenido/${slug}/portada.jpg`);
    }
  coverImageURL = coverImage.default;
} catch (error) {
  coverImageURL = "/placeholder.svg";
}

let authorImage;
let authorImageURL;

if (author) {
    try {
        authorImage = await import(`../../assets/autores/${article.author.id}.webp`);
    } catch {
        authorImage = await import(`../../assets/autores/${article.author.id}.jpg`);
    }
    authorImageURL = authorImage.default;
} else {
    authorImageURL = "/placeholder.svg";
}


---

<MainLayout title={article.title} description={article.description} image={'/images/contenido/'+page.slug.split('/')[2]+'/portada.webp'}>
    <div class="relative">
        <!-- Article Header -->
        <header class="container px-4 py-8 md:py-12 relative z-10">
            <div class="flex items-center gap-2 mb-4">
                <a href={'/articles?page=1&science='+scienceData.id} class={`text-sm font-medium color-${scienceData.color} hover:underline flex items-center`}>
                    <Icon icon={scienceData.icon} className="mr-1 h-4 w-4 mt-0.5" />
                    {t.sciences[scienceData.name].toUpperCase()}
                </a>
                <span class="text-muted-foreground">â€¢</span>
                <span class="text-sm text-muted-foreground flex items-center">
                    <Icon icon="clock" className="mr-1 h-4 w-4 mt-0.5" />
                    {calcReadTime(page.body)} {t.articles.readTime}.
                </span>
            </div>
            
            <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold tracking-tight mb-6">
                {article.title}
            </h1>
            
            <p class="text-xl text-muted-foreground max-w-3xl mb-8">
                {article.description}
            </p>
            
            <div class="flex items-center justify-between flex-wrap gap-4 mb-8">
                {hasMultipleAuthors ? (
                    <AuthorsOverlap authors={article.authors} />
                ) : (
                    <div class="flex items-center gap-3">
                        <OptimizedPicture 
                            src={authorImageURL}
                            alt={author.name} 
                            usage="avatar"
                            priority={true}
                            class="h-12 w-12 rounded-full object-cover"
                        />
                        <div>
                            <div class="font-medium">{author.name}</div>
                            <div class="text-sm text-muted-foreground flex"><Icon icon="calendar" className="mr-1 h-4 w-4 mt-0.5" /> {article.date.toLocaleDateString(t.articles.timeStamp, { year: 'numeric', month: 'long', day: 'numeric' })}</div>
                        </div>
                    </div>
                )}
                
                <div class="flex items-center gap-2">
                    <Button variant="outline" size="sm">
                        <Icon icon="bookmarkplus" className="mr-2 h-4 w-4" />
                        {t.common.save}
                    </Button>
                    <ShareMenu menuStyle="right: -4px;">
                </div>
            </div>
        </header>
        
        <!-- Featured Image -->
        <div class="w-full max-w-5xl mx-auto px-4 mb-12">
            <div class="aspect-[16/9] relative rounded-xl overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-300">
                <OptimizedPicture
                    src={coverImageURL}
                    alt={article.title}
                    usage="hero"
                    priority={true}
                    class="w-full h-full object-cover rounded-xl"
                />
            </div>
        </div>
        
        <!-- Article Content -->
        <div class="container px-4 relative z-10">
            <div class="grid grid-cols-1 lg:grid-cols-12 gap-12">
                <!-- Main Content -->
                <div class={"lg:col-span-8 "}>
                    <article class="prose dark:prose-invert prose-lg max-w-none">
                        <Content />
                    </article>
                    
                    <!-- Tags -->
                    <div class="mt-8 mb-12">
                        <h3 class={"text-lg font-semibold mb-3 " + article.tags===undefined ? "" : "hidden"}>Tags</h3>
                        <div class="flex flex-wrap gap-2">
                            { article.tags ? article.tags.map(tag => (
                                <a href={`/articles?page=1&tags=${tag.toLowerCase().replace(/\s+/g, '-')}`} class="px-3 py-1 bg-primary/10 text-primary rounded-full text-sm hover:bg-primary/20 transition-all hover:scale-105">
                                    {tag}
                                </a>
                            )) : <div/>}
                        </div>
                    </div>
                    
                    <!-- References -->
                    <div class={"mb-12 "+article.references===undefined ? "" : "hidden"}>
                        <h3 class="text-lg font-semibold mb-3">References</h3>
                        <ul class="space-y-3 text-sm">
                            {article.references ? article.references.map(ref => (
                                <li class="border-l-2 border-primary/30 pl-4 py-1 hover:border-primary transition-colors">
                                    <p class="font-medium">{ref.title}</p>
                                    <p class="text-muted-foreground">{ref.authors}. <em>{ref.journal}</em>, {ref.year}.</p>
                                    <p class="text-primary hover:underline">
                                        <a href={`https://doi.org/${ref.doi}`} target="_blank" rel="noopener noreferrer">
                                            DOI: {ref.doi}
                                        </a>
                                    </p>
                                </li>
                            )) : <div/>}
                        </ul>
                    </div>
                </div>
                
                <!-- Sidebar -->
                <div class="lg:col-span-4">
                    <div class="sticky top-24 space-y-8 mb-6">
                        <!-- Author Info -->
                        {hasMultipleAuthors ? (
                            <div class="rounded-xl border bg-card p-6 shadow-md hover:shadow-lg transition-all duration-300">
                                <h3 class="text-lg font-semibold mb-4">About the Authors</h3>
                                <div class="space-y-6">
                                    {authors.map(author => (
                                        <div class="flex items-start gap-4">
                                            <img 
                                                src={"/images/autores/" + author[1] + ".webp" || "/placeholder.svg"}
                                                alt={author[0].name}
                                                class="h-16 w-16 rounded-full object-cover shadow-md hover:shadow-lg transition-all duration-300 hover:scale-105"
                                            />
                                            <div>
                                                <div class="font-medium">{author[0].name}</div>
                                                {author.bio && <p class="text-sm text-muted-foreground mt-1">{author[0].bio}</p>}
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            </div>
                        ) : (
                            <ArticleAuthor author={author} authorid={article.author.id} authorIMG={authorImageURL}/>
                        )}
                        
                        <!-- Related Articles  -->
                        <RelatedArticles slug={slug} tags={article.tags} science={scienceData} />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <ImageLightbox />
</MainLayout>

